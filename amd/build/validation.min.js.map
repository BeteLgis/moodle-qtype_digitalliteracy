{"version":3,"sources":["../src/validation.js"],"names":["define","errors","groupByCoef","paramsByGroup","coefValueByGroup","errorsContainer","process","data","document","getElementById","coef","group","element","addEventListener","validateCoef","value","toString","grp","forEach","param","validateParams","elementValue","load","res","isValid","values","Object","hasParseErrors","includes","notAHundred","reduce","a","b","groupName","showOrHide","message","groupErrors","type","length","push","error","join","innerText","style","display","string","str","replace","parseInt","flag","groupParams","counter","i","hidden","checked"],"mappings":"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","sourcesContent":["\ndefine(function() {\n    var errors = {};\n    var groupByCoef = {};\n    var paramsByGroup = {};\n    var coefValueByGroup = {}; // [groupname] => coef value (-1 means parse error)\n    var errorsContainer = {}; // [groupname] => [errorType] => string (errorType - 'coef' or 'param')\n\n    function process(data) {\n        // quit if the form wasn't created (an exception was thrown)\n        if (!document.getElementById('id_responseformat')) {\n            return;\n        }\n\n        var coef,\n            group;\n        errors = data['errors'];\n        groupByCoef = data['coefs_map'];\n        paramsByGroup = data['params_map'];\n\n        for (coef in groupByCoef) {\n            group = groupByCoef[coef];\n            coefValueByGroup[group] = 0;\n            errorsContainer[group] = {'coef': '', 'param': ''};\n        }\n\n        for (coef in groupByCoef) { // Validate coefficients\n            // eslint-disable-next-line no-loop-func\n            (function() {\n                var group = groupByCoef[coef];\n                var element = document.getElementById('id_' + coef);\n                element.addEventListener('update', function() {\n                    validateCoef(element.value.toString(), group, false);\n                });\n                validateCoef(element.value.toString(), group, true);\n            }());\n        }\n\n        for (group in paramsByGroup) {\n            // eslint-disable-next-line no-loop-func\n            (function(grp) {\n                paramsByGroup[grp].forEach(function(param) {\n                    document.getElementById('id_' + param).addEventListener('change', function() {\n                        validateParams(grp, false);\n                    });\n                });\n                validateParams(grp, true);\n            })(group);\n        }\n    }\n\n    function validateCoef(elementValue, group, load) {\n        var res = isValid(elementValue);\n        coefValueByGroup[group] = res;\n        errorsContainer[group].coef = res < 0 ? 'validatecoef' : '';\n\n        var values = Object.values(coefValueByGroup);\n        var hasParseErrors = values.includes(-1);\n        var notAHundred = !hasParseErrors ? values.reduce(function(a, b) {\n            return a + b;\n        }, 0) !== 100 : false;\n        for (var groupName in coefValueByGroup) {\n            if (coefValueByGroup[groupName] >= 0) { // === errorsContainer[groupName]['coef'] === ''\n                errorsContainer[groupName].coef = notAHundred ? 'notahundred' : '';\n            }\n            if (!load) {\n                showOrHide(groupName);\n            }\n        }\n    }\n\n    function showOrHide(group) {\n        var message = [];\n        var groupErrors = errorsContainer[group];\n        for (var type in groupErrors) {\n            if (type === 'param' && coefValueByGroup[group] === 0) {\n                continue;\n            }\n            if (groupErrors[type].toString().length !== 0) {\n                message.push(errors[groupErrors[type]]);\n            }\n        }\n        var error = document.getElementById('fgroup_id_error_' + group);\n        var res = message.join(' | ');\n        if (res.length === 0) {\n            error.innerText = '';\n            error.style.display = '';\n        } else {\n            error.innerText = res;\n            error.style.display = 'block';\n        }\n    }\n\n    // Validating string (int in range [0;100] is needed)\n    function isValid(string) {\n        var str = string.replace(/[^0-9]/g, '');\n        if (str.length !== 0) {\n            var value = parseInt(str, 10);\n            return value >= 0 && value <= 100 ? value : -1;\n        }\n        return -1;\n    }\n\n    // At least 1 param in each group should be chosen\n    function validateParams(group, load) {\n        var flag = false;\n        var groupParams = paramsByGroup[group];\n        var counter = 0; // Used to check if all group is hidden\n        for (var i = 0; i < groupParams.length; i++) {\n            var param = groupParams[i];\n            var element = document.getElementById('id_' + param);\n            if (element.hidden) {\n                counter++;\n            } else if (element.checked) {\n                flag = true;\n                break;\n            }\n        }\n        errorsContainer[group].param = flag || counter === groupParams.length ? '' : 'tickacheckbox';\n        if (!load) {\n            showOrHide(group);\n        }\n    }\n    return {process: process};\n});"],"file":"validation.min.js"}